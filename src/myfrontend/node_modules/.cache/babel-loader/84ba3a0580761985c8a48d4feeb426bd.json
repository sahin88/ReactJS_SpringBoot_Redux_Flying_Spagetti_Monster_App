{"ast":null,"code":"import _slicedToArray from\"/home/alex/Documents/sts/MyWebApp/MyWebbApp-1/Guvenlik/src/myfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Typography from'@material-ui/core/Typography';import Button from'@material-ui/core/Button';import TextField from'@material-ui/core/TextField';import Container from'@material-ui/core/Container';import SendIcon from'@material-ui/icons/Send';import{makeStyles}from'@material-ui/core';import{useHistory}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles({btn:{fontSize:14,backgroundColor:'blue','&:hover':{background:'white',color:'blue'}},title:{textDecoration:'underline',marginBottom:20},field:{marginTop:20,marginBottom:20,display:'block'},container:{backgroundColor:'#fff',border:'1px solid #ddd',padding:'20px'},mainContainer:{display:'flex',flexDirection:'space-evenly',background:'#f9f9f9',padding:'20px',border:'1px solid red'}});function Register(){var classes=useStyles();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),repassword=_useState8[0],setRepassword=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),nameError=_useState10[0],setNameError=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),emailError=_useState12[0],setEmailError=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),passwordError=_useState14[0],setPasswordError=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),repasswordError=_useState16[0],setRePasswordError=_useState16[1];var history=useHistory();var handleSubmit=function handleSubmit(e){e.preventDefault();setNameError(false);setEmailError(false);setPasswordError(false);setRePasswordError(false);if(name==''){setNameError(true);}if(email==''){setEmailError(true);}if(password==''){setEmailError(true);}if(password==''){setEmailError(true);}if(password!==repassword){setPasswordError(true);setRePasswordError(true);}if(name&&email&&password&&repassword){}};return/*#__PURE__*/_jsxs(Container,{maxWidth:\"xs\",className:classes.container,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"textSecondary\",component:\"h2\",gutterBottom:true,children:\"Create a New Note\"}),/*#__PURE__*/_jsxs(\"form\",{noValidate:true,autoComplete:\"off\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(TextField,{className:classes.field,onChange:function onChange(e){return setName(e.target.value);},label:\"Your Full Name\",variant:\"outlined\",color:\"secondary\",fullWidth:true,required:true,error:nameError}),/*#__PURE__*/_jsx(TextField,{className:classes.field,onChange:function onChange(e){return setEmail(e.target.value);},label:\"Email\",variant:\"outlined\",color:\"secondary\",fullWidth:true,required:true,error:emailError}),/*#__PURE__*/_jsx(TextField,{className:classes.field,onChange:function onChange(e){return setPassword(e.target.value);},label:\"Password\",variant:\"outlined\",color:\"secondary\",fullWidth:true,required:true,error:passwordError}),/*#__PURE__*/_jsx(TextField,{className:classes.field,onChange:function onChange(e){return setRePasswordError(e.target.value);},label:\"Repassword\",variant:\"outlined\",color:\"secondary\",fullWidth:true,required:true,error:repasswordError}),/*#__PURE__*/_jsx(Button,{type:\"submit\",style:{backgroundColor:'#DB4437',color:'#FFFFFF'},variant:\"contained\",endIcon:/*#__PURE__*/_jsx(SendIcon,{}),children:\"Register\"})]})]});}export default Register;","map":{"version":3,"sources":["/home/alex/Documents/sts/MyWebApp/MyWebbApp-1/Guvenlik/src/myfrontend/src/components/Register.js"],"names":["React","useState","Typography","Button","TextField","Container","SendIcon","makeStyles","useHistory","useStyles","btn","fontSize","backgroundColor","background","color","title","textDecoration","marginBottom","field","marginTop","display","container","border","padding","mainContainer","flexDirection","Register","classes","name","setName","email","setEmail","password","setPassword","repassword","setRepassword","nameError","setNameError","emailError","setEmailError","passwordError","setPasswordError","repasswordError","setRePasswordError","history","handleSubmit","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Container from '@material-ui/core/Container'\nimport SendIcon from '@material-ui/icons/Send';\nimport { makeStyles } from '@material-ui/core'\n\nimport { useHistory } from 'react-router-dom'\n\nconst useStyles = makeStyles({\n    btn: {\n        fontSize: 14,\n        backgroundColor: 'blue',\n        '&:hover': {\n            background: 'white',\n            color: 'blue'\n        },\n    },\n    title: {\n        textDecoration: 'underline',\n        marginBottom: 20,\n    },\n    field: {\n        marginTop: 20,\n        marginBottom: 20,\n        display: 'block'\n    },\n    container: {\n        backgroundColor:'#fff',\n        border: '1px solid #ddd',\n        padding:'20px'\n\n    },\n    mainContainer: {\n        display: 'flex',\n        flexDirection: 'space-evenly',\n        background: '#f9f9f9',\n        padding:'20px',\n        border:'1px solid red'\n\n    }\n})\n\nfunction Register() {\n\n    const classes = useStyles()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [repassword, setRepassword] = useState('')\n    const [nameError, setNameError] = useState(false)\n    const [emailError, setEmailError] = useState(false)\n    const [passwordError, setPasswordError] = useState(false)\n    const [repasswordError, setRePasswordError] = useState(false)\n\n    const history = useHistory()\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        setNameError(false)\n        setEmailError(false)\n        setPasswordError(false)\n        setRePasswordError(false)\n\n        if (name == '') {\n            setNameError(true)\n        }\n        if (email == '') {\n            setEmailError(true)\n        }\n\n        if (password == '') {\n            setEmailError(true)\n        }\n        if (password == '') {\n            setEmailError(true)\n        }\n\n        if (password !== repassword) {\n            setPasswordError(true)\n            setRePasswordError(true)\n        }\n        if (name && email &&password &&repassword) {\n          \n        }\n    }\n\n    return (\n        \n            <Container maxWidth=\"xs\" className={classes.container}>\n                <Typography\n                    variant=\"h6\"\n                    color=\"textSecondary\"\n                    component=\"h2\"\n                    gutterBottom\n                >\n                    Create a New Note\n                </Typography>\n\n                <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n                    <TextField className={classes.field}\n                        onChange={(e) => setName(e.target.value)}\n                        label=\"Your Full Name\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        fullWidth\n                        required\n                        error={nameError}\n                    />\n\n                    <TextField className={classes.field}\n                        onChange={(e) => setEmail(e.target.value)}\n                        label=\"Email\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        fullWidth\n                        required\n                        error={emailError}\n                    />\n\n                    <TextField className={classes.field}\n                        onChange={(e) => setPassword(e.target.value)}\n                        label=\"Password\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        fullWidth\n                        required\n                        error={passwordError}\n                    />\n\n                    <TextField className={classes.field}\n                        onChange={(e) => setRePasswordError(e.target.value)}\n                        label=\"Repassword\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                     \n                        fullWidth\n                        required\n                        error={repasswordError}\n                    />\n\n               \n                    <Button\n                        type=\"submit\"\n                        style={{backgroundColor: '#DB4437', color: '#FFFFFF'}}\n                        variant=\"contained\"\n                        endIcon={<SendIcon />}>\n                        Register\n                    </Button>\n                </form>\n\n\n            </Container>\n\n\n    )\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}