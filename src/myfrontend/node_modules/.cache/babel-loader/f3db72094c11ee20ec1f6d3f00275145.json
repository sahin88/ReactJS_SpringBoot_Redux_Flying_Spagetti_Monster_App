{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/sts/MyWebApp/MyWebbApp-1/Guvenlik/src/myfrontend/src/components/SlidingCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef, Fragment } from 'react';\nimport '../css/card.css';\nimport { IoBeerSharp } from 'react-icons/io5';\nimport LocalLaundryServiceOutlinedIcon from '@material-ui/icons/LocalLaundryServiceOutlined';\nimport KeyboardArrowRightOutlinedIcon from '@material-ui/icons/KeyboardArrowRightOutlined';\nimport KeyboardArrowLeftOutlinedIcon from '@material-ui/icons/KeyboardArrowLeftOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SlidingCard(props) {\n  _s();\n\n  const [current, setCurrent] = useState(1);\n  const max_length = 3;\n  const card_ref = useRef();\n  const array = [0, 0, 0];\n  const [cardWidth, setCardWidth] = useState(300);\n\n  const handlePrevious = () => {\n    let new_card;\n\n    if (current == 0) {\n      new_card = max_length - 1;\n      card_ref.current.style.transitionDuration = '.0s';\n    } else {\n      new_card = current - 1;\n      card_ref.current.style.transitionDuration = '.5s';\n    }\n\n    card_ref.current.style.transform = `translate(${new_card * -cardWidth}px)`;\n    setCurrent(current == 0 ? max_length - 1 : current - 1);\n  };\n\n  const handleNext = () => {\n    let new_card;\n\n    if (current == 2) {\n      new_card = 0;\n      card_ref.current.style.transitionDuration = '0.0s';\n    } else {\n      new_card = current + 1;\n      card_ref.current.style.transitionDuration = '.5s';\n    }\n\n    setCurrent(new_card);\n    card_ref.current.style.transform = `translate(${new_card * -cardWidth}px)`;\n  };\n\n  useEffect(() => {\n    let current_Node = card_ref.current;\n    let first_item = card_ref.current.children[0].cloneNode(true);\n    let last_item = card_ref.current.children[2].cloneNode(true);\n    current_Node.append(first_item);\n    current_Node.insertBefore(last_item, card_ref.current.children[0]);\n    return () => {};\n  }, []);\n  useEffect(() => {\n    let current_Node = card_ref.current;\n    let first_item = card_ref.current.children[0].cloneNode(true);\n    let last_item = card_ref.current.children[2].cloneNode(true);\n    current_Node.append(first_item);\n    current_Node.insertBefore(last_item, card_ref.current.children[0]);\n    window.addEventListener('resize', () => {\n      try {\n        let with_container_element = card_ref.current.children[0].getBoundingClientRect().width;\n        setCardWidth(with_container_element);\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    });\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sliding_card_main_div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sliding_card_left_right_button_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home_right\",\n        onClick: handlePrevious,\n        children: [\" \", /*#__PURE__*/_jsxDEV(KeyboardArrowLeftOutlinedIcon, {\n          className: \"sliding_card_left_right_button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 71\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home_right\",\n        onClick: handleNext,\n        children: [/*#__PURE__*/_jsxDEV(KeyboardArrowRightOutlinedIcon, {\n          className: \"sliding_card_left_right_button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 67\n        }, this), \"    \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sliding_cards_frame\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sliding_cards_container\",\n        ref: card_ref,\n        children: array.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sliding_card\",\n            children: [/*#__PURE__*/_jsxDEV(IoBeerSharp, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header\",\n              children: [\" Header\", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"explanation\",\n              children: \"Explanation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 13\n  }, this);\n}\n\n_s(SlidingCard, \"GcLcpZLfMP/7DL6IgSisFGWOYCI=\");\n\n_c = SlidingCard;\nexport default SlidingCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlidingCard\");","map":{"version":3,"sources":["/home/alex/Documents/sts/MyWebApp/MyWebbApp-1/Guvenlik/src/myfrontend/src/components/SlidingCard.js"],"names":["React","useEffect","useState","useRef","Fragment","IoBeerSharp","LocalLaundryServiceOutlinedIcon","KeyboardArrowRightOutlinedIcon","KeyboardArrowLeftOutlinedIcon","SlidingCard","props","current","setCurrent","max_length","card_ref","array","cardWidth","setCardWidth","handlePrevious","new_card","style","transitionDuration","transform","handleNext","current_Node","first_item","children","cloneNode","last_item","append","insertBefore","window","addEventListener","with_container_element","getBoundingClientRect","width","error","console","log","map","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, Fragment } from 'react'\nimport '../css/card.css'\n\nimport {IoBeerSharp} from 'react-icons/io5'\nimport LocalLaundryServiceOutlinedIcon from '@material-ui/icons/LocalLaundryServiceOutlined';\nimport KeyboardArrowRightOutlinedIcon from '@material-ui/icons/KeyboardArrowRightOutlined';\nimport KeyboardArrowLeftOutlinedIcon from '@material-ui/icons/KeyboardArrowLeftOutlined';\n\nfunction SlidingCard(props) {\n\n    const [current, setCurrent]= useState(1)\n    const max_length=3\n    const card_ref=useRef()\n    const  array=[0,0,0]\n\n    const [cardWidth,setCardWidth]=useState(300)\n\n    const handlePrevious =()=>{\n        let new_card;\n        if(current==0){\n            new_card= max_length-1;\n            card_ref.current.style.transitionDuration='.0s';\n\n        }\n        else{\n            new_card=current-1;\n            card_ref.current.style.transitionDuration='.5s';\n        }\n        \n        card_ref.current.style.transform = `translate(${new_card*-cardWidth}px)`;\n        setCurrent(current==0?max_length-1:current-1);\n    }\n    const handleNext =()=>{\n\n        let new_card;\n        if(current==2){\n            new_card=0;\n            card_ref.current.style.transitionDuration='0.0s';\n\n        }\n        else{\n            new_card=current+1;\n            card_ref.current.style.transitionDuration='.5s';\n        }\n        \n\n        setCurrent(new_card);\n       \n        card_ref.current.style.transform = `translate(${new_card*-cardWidth}px)`;\n        \n    }\n    useEffect(() => {\n        let current_Node=card_ref.current;\n        let first_item=card_ref.current.children[0].cloneNode(true);\n        let last_item=card_ref.current.children[2].cloneNode(true);\n        current_Node.append(first_item);\n        current_Node.insertBefore(last_item,card_ref.current.children[0]);\n     \n        return () => {\n        \n        }\n    }, [])\n\n\n    useEffect(() => {\n        let current_Node=card_ref.current\n        let first_item=card_ref.current.children[0].cloneNode(true)\n        let last_item=card_ref.current.children[2].cloneNode(true)\n        current_Node.append(first_item);\n        current_Node.insertBefore(last_item,card_ref.current.children[0])\n        window.addEventListener('resize', () => {\n            try{let with_container_element=card_ref.current.children[0].getBoundingClientRect().width;\n    \n            setCardWidth(with_container_element);}\n            catch(error){\n                console.log(\"error\", error)\n            }\n\n            \n        })\n        return () => {\n        \n        }\n    }, [])\n   \n  \n    return (\n\n            <div className=\"sliding_card_main_div\">\n\n            <div className='sliding_card_left_right_button_div'>\n                <div className='home_right' onClick={handlePrevious}> < KeyboardArrowLeftOutlinedIcon  className='sliding_card_left_right_button' /> </div>\n                <div className='home_right' onClick={handleNext }>< KeyboardArrowRightOutlinedIcon className='sliding_card_left_right_button'/>    </div>\n                \n            </div>\n                <div className='sliding_cards_frame'>\n                        <div className='sliding_cards_container' ref={card_ref}>\n                        \n                    \n                        {array.map((item, index)=>{return(\n                    \n                            <div className=\"sliding_card\"  >\n                        \n                            < IoBeerSharp className=\"icon\"/>\n                                <div className='header'> Header{index+1}</div>\n                                \n                                <div className='explanation'>Explanation</div>\n                            </div >\n                                )\n                        })} \n                        </div>\n                </div>\n      \n            </div>\n       \n\n    )\n}\n\nexport default SlidingCard;"]},"metadata":{},"sourceType":"module"}